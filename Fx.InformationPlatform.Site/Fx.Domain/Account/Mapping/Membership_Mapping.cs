//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fx.Domain.Account.Mapping
{
    #pragma warning disable 1573
    using System.Data.Entity.ModelConfiguration;
    using Fx.Entity.MemberShip;
    
    internal partial class Membership_Mapping : EntityTypeConfiguration<Membership>
    {
        public Membership_Mapping()
        {                        
              this.HasKey(t => t.UserId);
              this.ToTable("aspnet_Membership");
              this.Property(t => t.ApplicationId).HasColumnName("ApplicationId");
              this.Property(t => t.UserId).HasColumnName("UserId");
              this.Property(t => t.Password).HasColumnName("Password").IsRequired().HasMaxLength(128);
              this.Property(t => t.PasswordFormat).HasColumnName("PasswordFormat");
              this.Property(t => t.PasswordSalt).HasColumnName("PasswordSalt").IsRequired().HasMaxLength(128);
              this.Property(t => t.MobilePIN).HasColumnName("MobilePIN").HasMaxLength(16);
              this.Property(t => t.Email).HasColumnName("Email").HasMaxLength(256);
              this.Property(t => t.LoweredEmail).HasColumnName("LoweredEmail").HasMaxLength(256);
              this.Property(t => t.PasswordQuestion).HasColumnName("PasswordQuestion").HasMaxLength(256);
              this.Property(t => t.PasswordAnswer).HasColumnName("PasswordAnswer").HasMaxLength(128);
              this.Property(t => t.IsApproved).HasColumnName("IsApproved");
              this.Property(t => t.IsLockedOut).HasColumnName("IsLockedOut");
              this.Property(t => t.CreateDate).HasColumnName("CreateDate");
              this.Property(t => t.LastLoginDate).HasColumnName("LastLoginDate");
              this.Property(t => t.LastPasswordChangedDate).HasColumnName("LastPasswordChangedDate");
              this.Property(t => t.LastLockoutDate).HasColumnName("LastLockoutDate");
              this.Property(t => t.FailedPasswordAttemptCount).HasColumnName("FailedPasswordAttemptCount");
              this.Property(t => t.FailedPasswordAttemptWindowStart).HasColumnName("FailedPasswordAttemptWindowStart");
              this.Property(t => t.FailedPasswordAnswerAttemptCount).HasColumnName("FailedPasswordAnswerAttemptCount");
              this.Property(t => t.FailedPasswordAnswerAttemptWindowStart).HasColumnName("FailedPasswordAnswerAttemptWindowStart");
              this.Property(t => t.Comment).HasColumnName("Comment");
              this.HasRequired(t => t.Applications).WithMany(t => t.Membership).HasForeignKey(d => d.ApplicationId);
              this.HasRequired(t => t.Users).WithOptional(t => t.Membership);
              this.HasOptional(t => t.OtherInformations);
         }
    }
}
